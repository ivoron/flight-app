{"version":3,"sources":["Components/FlightInfoItem.js","Components/FlightItem.js","Components/FlightCard.js","Components/Loader.js","Components/NoResult.js","Components/FlightList.js","Components/Forms/AviaFilterForm.js","Components/Forms/FilterForm.js","Components/Forms/PriceForm.js","Components/Forms/SortingForm.js","Components/Sidebar.js","Components/App.js","index.js","Store/Store.js"],"names":["FlightInfoItem","flightInfo","price","total","className","carrier","caption","amount","currency","FlightItem","flightSegment","showDate","date","Date","toLocaleTimeString","slice","getDay","getDate","getMonth","departureDate","arrivalDate","length","daysDifference","place","departureCity","departureAirport","uid","showDepAirport","arrivalCity","arrivalAirport","showArrAirport","hours","getHours","minutes","getMinutes","showDuration","answer","showTransfer","airline","FlightCard","legs","map","direction","segments","Loader","NoResult","FlightList","observer","AppStore","currentFlights","useEffect","getFlightList","loadRef","React","useRef","options","rootMargin","threshold","IntersectionObserver","entries","isIntersecting","isLoading","addFlights","observe","current","showFiltred","filtredFlights","flight","flightToken","ref","AviaFilterForm","carriers","selectCompanies","item","type","name","onChange","event","target","checked","FilterForm","selectTransfers","value","PriceForm","setPriceRange","useState","minPrice","setMinPrice","maxPrice","setMaxPrice","placeholder","SortingForm","sortingFlights","sortFlights","onInput","Sidebar","showPriceRange","App","inject","props","store","appStore","allFlights","bestPrices","filterPrices","transferOptions","filtredCarriers","startIndex","listLimit","endIndex","a","fetch","then","response","json","data","result","push","flights","JSON","parse","stringify","loadFlights","catch","error","console","i","setShowFiltred","setLoading","sort","b","duration","setCarriers","filterByValue","temporaryFlights","option","filter","career","check","company","Array","from","Set","makeAutoObservable","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74e18117.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function FlightInfoItem({ flightInfo }) {\r\n  const price = flightInfo.price.total\r\n  return (\r\n    <div className=\"flight-card-price\">\r\n      <p>&#9992; {flightInfo.carrier.caption}</p>\r\n      <p>\r\n        {price.amount} {price.currency} <br />\r\n        <span>Стоимость для одного взрослого пассажира</span>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FlightItem({ flightSegment }) {\r\n  const showDate = (date) => {\r\n    const days = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']\r\n    const months = [\r\n      'янваяря',\r\n      'февраля',\r\n      'марта',\r\n      'апреля',\r\n      'мая',\r\n      'июня',\r\n      'июля',\r\n      'августа',\r\n      'сентября',\r\n      'октября',\r\n      'ноября',\r\n      'декабря',\r\n    ]\r\n    return `${new Date(date).toLocaleTimeString().slice(0, -3)}\r\n      ${days[new Date(date).getDay()]},\r\n        ${new Date(date).getDate()}\r\n        ${months[new Date(date).getMonth()]}\r\n      `\r\n  }\r\n  const showDepAirport = (place) => {\r\n    return `${place.departureCity?.caption || ''},\r\n    ${place.departureAirport.caption || ''} (${place.departureAirport.uid})`\r\n  }\r\n  const showArrAirport = (place) => {\r\n    return `${place.arrivalCity?.caption || ''},\r\n      ${place?.arrivalAirport?.caption || ''} (${place.arrivalAirport.uid})`\r\n  }\r\n  const showTransfer = () => {\r\n    let answer = ''\r\n    switch (flightSegment.length) {\r\n      case 1:\r\n        answer = 'без пересадок'\r\n        break\r\n      case 2:\r\n        answer = `1 пересадка в аэропорту ${flightSegment[0].arrivalAirport.caption}`\r\n        break\r\n      case 3:\r\n        answer = '2 пересадки'\r\n        break\r\n      default:\r\n        answer = 'более 2х пересадок'\r\n    }\r\n    return answer\r\n  }\r\n  const departureDate = flightSegment[0].departureDate\r\n  const arrivalDate = flightSegment[flightSegment.length - 1].arrivalDate\r\n  const daysDifference =\r\n    new Date(arrivalDate).getDay() - new Date(departureDate).getDay()\r\n\r\n  const showDuration = () => {\r\n    let hours =\r\n      new Date(arrivalDate).getHours() -\r\n      new Date(departureDate).getHours() +\r\n      daysDifference * 24\r\n    let minutes =\r\n      new Date(arrivalDate).getMinutes() - new Date(departureDate).getMinutes()\r\n    if (minutes < 0) {\r\n      hours -= 1\r\n      minutes += 60\r\n    }\r\n    let answer = `${hours}  час. ${minutes} мин.`\r\n    return answer\r\n  }\r\n  return (\r\n    <div className=\"flight-segment\">\r\n      <div className=\"flight-card-info\">\r\n        <p>{showDepAirport(flightSegment[0])}</p>\r\n        <p>&rarr;</p>\r\n        <p>{showArrAirport(flightSegment[flightSegment.length - 1])}</p>\r\n      </div>\r\n      <div className=\"flight-card-info\">\r\n        <p>Отпр. {showDate(departureDate)}</p>\r\n        <p>&#128349; {showDuration()}</p>\r\n        <p>Приб. {showDate(arrivalDate)}</p>\r\n      </div>\r\n      <div className=\"decorLine\">\r\n        <p></p>\r\n        <p>{showTransfer()}</p>\r\n        <p></p>\r\n      </div>\r\n      <div className=\"airline-info\">\r\n        Рейс выполняет: {flightSegment[0].airline.caption}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport FlightInfoItem from './FlightInfoItem'\r\nimport FlightItem from './FlightItem'\r\n\r\nconst FlightCard = ({ flightInfo }) => {\r\n  return (\r\n    <div className=\"flight-card\">\r\n      <FlightInfoItem flightInfo={flightInfo} />\r\n      {flightInfo.legs.map((direction) => (\r\n        <FlightItem\r\n          key={direction.segments[0].arrivalDate}\r\n          flightSegment={direction.segments}\r\n        />\r\n      ))}\r\n      <button className=\"flight-card-btn\">выбрать</button>\r\n    </div>\r\n  )\r\n}\r\nexport default FlightCard\r\n","import React from 'react'\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NoResult() {\r\n  return (\r\n    <div className=\"no-result-page\">\r\n      <h3>По вашему запросу ничего не найдено :(</h3>\r\n    </div>\r\n  )\r\n}\r\n","import { observer } from 'mobx-react'\r\nimport React, { useEffect } from 'react'\r\nimport FlightCard from './FlightCard'\r\nimport Loader from './Loader'\r\nimport NoResult from './NoResult'\r\n\r\nconst FlightList = observer(({ AppStore }) => {\r\n  const { currentFlights } = AppStore\r\n  useEffect(() => {\r\n    AppStore.getFlightList()\r\n  }, [AppStore])\r\n  const loadRef = React.useRef()\r\n  const options = {\r\n    rootMargin: '100px',\r\n    threshold: 1.0,\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const callback = (entries, observer) => {\r\n      if (entries[0].isIntersecting && !AppStore.isLoading) {\r\n        AppStore.addFlights()\r\n      }\r\n    }\r\n    const observer = new IntersectionObserver(callback, options)\r\n    observer.observe(loadRef.current)\r\n  }, [AppStore])\r\n  return (\r\n    <div className=\"flight-list\">\r\n      {!AppStore.isLoading ? (\r\n        AppStore.showFiltred ? (\r\n          AppStore.filtredFlights.map((flight) => (\r\n            <FlightCard key={flight.flightToken} flightInfo={flight.flight} />\r\n          ))\r\n        ) : (\r\n          currentFlights.map((flight) => (\r\n            <FlightCard key={flight.flightToken} flightInfo={flight.flight} />\r\n          ))\r\n        )\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n      {!AppStore.filtredFlights.length && AppStore.showFiltred ? (\r\n        <NoResult />\r\n      ) : (\r\n        <div ref={loadRef}></div>\r\n      )}\r\n    </div>\r\n  )\r\n})\r\nexport default FlightList\r\n","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst AviaFilterForm = observer(({ carriers, selectCompanies }) => {\r\n  return (\r\n    <div className=\"form-container\">\r\n      <label>\r\n        <p>Авиакомпании</p>\r\n        <form className=\"sorting-form\">\r\n          {carriers.map((item) => (\r\n            <label key={item}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name={item}\r\n                onChange={(event) =>\r\n                  selectCompanies(event.target.name, event.target.checked)\r\n                }\r\n              />\r\n              {item}\r\n            </label>\r\n          ))}\r\n        </form>\r\n      </label>\r\n    </div>\r\n  )\r\n})\r\nexport default AviaFilterForm\r\n","import React from 'react'\r\n\r\nexport default function FilterForm({ selectTransfers }) {\r\n  return (\r\n    <div className=\"form-container\">\r\n      <label>\r\n        <p>Фильтровать</p>\r\n        <form className=\"sorting-form\">\r\n          <label>\r\n            <input\r\n              name=\"filter-form\"\r\n              type=\"checkbox\"\r\n              value=\"no-transfer\"\r\n              onChange={(event) =>\r\n                selectTransfers(event.target.value, event.target.checked)\r\n              }\r\n            />{' '}\r\n            - без пересадок\r\n          </label>\r\n          <label>\r\n            <input\r\n              name=\"filter-form\"\r\n              type=\"checkbox\"\r\n              value=\"one-transfer\"\r\n              onChange={(event) =>\r\n                selectTransfers(event.target.value, event.target.checked)\r\n              }\r\n            />{' '}\r\n            - одна пересадка\r\n          </label>\r\n        </form>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function PriceForm({ setPriceRange }) {\r\n  const [minPrice, setMinPrice] = useState('')\r\n  const [maxPrice, setMaxPrice] = useState('')\r\n  useEffect(() => {\r\n    setPriceRange(minPrice, maxPrice)\r\n  }, [setPriceRange, minPrice, maxPrice])\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <label>\r\n        <p>Цена</p>\r\n        <form className=\"sorting-form\">\r\n          <label>\r\n            от{' '}\r\n            <input\r\n              placeholder=\"0\"\r\n              type=\"number\"\r\n              name=\"minPrice\"\r\n              onChange={(event) => setMinPrice(event.target.value)}\r\n              value={minPrice}\r\n            ></input>\r\n          </label>\r\n          <label>\r\n            до{' '}\r\n            <input\r\n              placeholder=\"100000\"\r\n              type=\"number\"\r\n              name=\"maxPrice\"\r\n              onChange={(event) => setMaxPrice(event.target.value)}\r\n              value={maxPrice}\r\n            ></input>\r\n          </label>\r\n        </form>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SortingForm({ sortingFlights }) {\r\n  const sortFlights = (value) => {\r\n    sortingFlights(value)\r\n  }\r\n  return (\r\n    <div className=\"form-container\">\r\n      <label>\r\n        <p>Сортировать</p>\r\n        <form className=\"sorting-form\">\r\n          <label>\r\n            <input\r\n              name=\"sorting-form\"\r\n              type=\"radio\"\r\n              value=\"ascending-price\"\r\n              onInput={(event) => sortFlights(event.target.value)}\r\n            />{' '}\r\n            - сначала дешевые\r\n          </label>\r\n          <label>\r\n            <input\r\n              name=\"sorting-form\"\r\n              type=\"radio\"\r\n              value=\"descending-price\"\r\n              onInput={(event) => sortFlights(event.target.value)}\r\n            />{' '}\r\n            - сначала дорогие\r\n          </label>\r\n          <label>\r\n            <input\r\n              name=\"sorting-form\"\r\n              type=\"radio\"\r\n              value=\"travel-time\"\r\n              onInput={(event) => sortFlights(event.target.value)}\r\n            />{' '}\r\n            - по времени в пути\r\n          </label>\r\n        </form>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import { observer } from 'mobx-react'\r\nimport React from 'react'\r\nimport AviaFilterForm from './Forms/AviaFilterForm'\r\nimport FilterForm from './Forms/FilterForm'\r\nimport PriceForm from './Forms/PriceForm'\r\nimport SortingForm from './Forms/SortingForm'\r\n\r\nconst Sidebar = observer(({ AppStore }) => {\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"sidebar\">\r\n        <SortingForm sortingFlights={AppStore.sortingFlights} />\r\n        <FilterForm selectTransfers={AppStore.selectTransfers} />\r\n        <PriceForm\r\n          showPriceRange={AppStore.showPriceRange}\r\n          setPriceRange={AppStore.setPriceRange}\r\n        />\r\n        <AviaFilterForm\r\n          carriers={AppStore.carriers}\r\n          selectCompanies={AppStore.selectCompanies}\r\n        />\r\n      </div>\r\n      {AppStore.showFiltred &&\r\n        (AppStore.filtredFlights.length ? (\r\n          <p className=\"filter-message\">\r\n            Найдено: {AppStore.filtredFlights.length} рейсов\r\n          </p>\r\n        ) : (\r\n          <p className=\"filter-message\">\r\n            По заданному фильтру рейсов не найдено\r\n          </p>\r\n        ))}\r\n    </div>\r\n  )\r\n})\r\nexport default Sidebar\r\n","import React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport FlightList from './FlightList'\nimport Sidebar from './Sidebar'\n\nconst App = inject('store')(\n  observer((props) => {\n    const { store } = props\n    return (\n      <div className=\"App\">\n        <Sidebar AppStore={store} />\n        <div className=\"content\">\n          <FlightList AppStore={store} />\n        </div>\n      </div>\n    )\n  })\n)\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './Components/App'\nimport './style.scss'\nimport Store from './Store/Store'\n\nconst appStore = { store: new Store() }\nReactDOM.render(\n  <React.StrictMode>\n    <App {...appStore} />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { makeAutoObservable } from 'mobx'\r\n\r\nclass Store {\r\n  allFlights = [] //массив всех перелетов\r\n  currentFlights = [] // отображаемый массив перелетов\r\n  filtredFlights = [] //отфильтрованные перелеты\r\n  bestPrices = {} // не применятся\r\n  filterPrices = {\r\n    minPrice: '',\r\n    maxPrice: '',\r\n  } // диапазон цен для фильтрации\r\n  transferOptions = [] //список пересодок для фильтрации\r\n  carriers = [] // список доступных авиакомпаний\r\n  filtredCarriers = [] // список выбранных авиакомпаний\r\n  isLoading = true //индикатор загрузки\r\n  showFiltred = false //индикатор отображения отфильтрованныъ перелетов\r\n  startIndex = 0 //стартовый индекс добавления в текущий массив из общего\r\n  listLimit = 10 // лимит на единоразовое добавление в текущий массив\r\n  endIndex = 10 // конечный индекс  добавления в текущий массив из общего\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n  //первоначальная загрузка списка перелетов\r\n  getFlightList = async () => {\r\n    fetch('./flights.json')\r\n      .then((response) => response.json())\r\n      .then((data) => data.result)\r\n      .then((result) => {\r\n        this.allFlights.push(...result.flights)\r\n        this.bestPrices = JSON.parse(JSON.stringify(result.bestPrices))\r\n      })\r\n      .then(() => {\r\n        this.loadFlights()\r\n      })\r\n      .catch((error) => console.error(error))\r\n  }\r\n  //загрузка первой порции в текущий массив перелетов\r\n  loadFlights = () => {\r\n    for (let i = this.startIndex; i < this.endIndex; i++) {\r\n      this.currentFlights.push(this.allFlights[i])\r\n    }\r\n    this.setShowFiltred(false)\r\n    this.setLoading(false)\r\n  }\r\n  //подгрузка данных из общего массива в текущий\r\n  addFlights = () => {\r\n    this.setLoading(true)\r\n    this.startIndex += this.listLimit\r\n    this.endIndex += this.listLimit\r\n    this.loadFlights()\r\n    this.setLoading(false)\r\n  }\r\n  //переключение индикатора загрузки\r\n  setLoading = (value) => {\r\n    this.isLoading = value\r\n  }\r\n  //функция сортировки текущего массива -SortingForm.js\r\n  sortingFlights = (value) => {\r\n    if (!this.showFiltred) {\r\n      this.filtredFlights = [...this.currentFlights]\r\n      this.setShowFiltred(true)\r\n    }\r\n    switch (value) {\r\n      case 'ascending-price':\r\n        this.filtredFlights.sort(function (a, b) {\r\n          if (+a.flight.price.total.amount > +b.flight.price.total.amount) {\r\n            return 1\r\n          }\r\n          if (+a.flight.price.total.amount < +b.flight.price.total.amount) {\r\n            return -1\r\n          }\r\n          return 0\r\n        })\r\n        break\r\n      case 'descending-price':\r\n        this.filtredFlights.sort(function (a, b) {\r\n          if (+a.flight.price.total.amount < +b.flight.price.total.amount) {\r\n            return 1\r\n          }\r\n          if (+a.flight.price.total.amount > +b.flight.price.total.amount) {\r\n            return -1\r\n          }\r\n          return 0\r\n        })\r\n        break\r\n      case 'travel-time':\r\n        this.filtredFlights.sort(function (a, b) {\r\n          if (\r\n            a.flight.legs[0].duration + a.flight.legs[1].duration >\r\n            b.flight.legs[0].duration + b.flight.legs[1].duration\r\n          ) {\r\n            return 1\r\n          }\r\n          if (\r\n            a.flight.legs[0].duration + a.flight.legs[1].duration <\r\n            b.flight.legs[0].duration + b.flight.legs[1].duration\r\n          ) {\r\n            return -1\r\n          }\r\n          return 0\r\n        })\r\n        break\r\n      default:\r\n    }\r\n    this.setCarriers()\r\n  }\r\n  //индикатор отображения отфильтрованного массива\r\n  setShowFiltred = (value) => {\r\n    this.showFiltred = value\r\n  }\r\n  //функция фильтрации по по пересадкам и авиакмпаниям (FilterForm.js/AviaFilterForm.js)\r\n  filterByValue = (type) => {\r\n    const temporaryFlights = [...this.filtredFlights]\r\n    this.showPriceRange()\r\n    if (type === 'transfer') {\r\n      if (!this.transferOptions.length) {\r\n        this.setShowFiltred(false)\r\n        this.filtredFlights = [...temporaryFlights]\r\n      } else {\r\n        this.setShowFiltred(true)\r\n        for (let option of this.transferOptions) {\r\n          if (option === 'no-transfer') {\r\n            this.filtredFlights = [\r\n              ...this.filtredFlights.filter(\r\n                (flight) =>\r\n                  flight.flight.legs[0].segments.length === 1 &&\r\n                  flight.flight.legs[1].segments.length === 1\r\n              ),\r\n            ]\r\n          } else if (option === 'one-transfer') {\r\n            this.filtredFlights = [\r\n              ...this.filtredFlights.filter(\r\n                (flight) =>\r\n                  flight.flight.legs[0].segments.length +\r\n                    flight.flight.legs[1].segments.length ===\r\n                  3\r\n              ),\r\n            ]\r\n          }\r\n        }\r\n      }\r\n      this.setCarriers()\r\n    }\r\n    if (type === 'career') {\r\n      const temporaryFlights = [...this.filtredFlights]\r\n      if (!this.filtredCarriers.length) {\r\n        this.filtredFlights = [...temporaryFlights]\r\n      } else {\r\n        this.filtredFlights = []\r\n        for (let career of this.filtredCarriers) {\r\n          this.filtredFlights = [\r\n            ...this.filtredFlights,\r\n            ...this.currentFlights.filter(\r\n              (flight) => flight.flight.carrier.caption === career\r\n            ),\r\n          ]\r\n        }\r\n        this.setShowFiltred(true)\r\n      }\r\n    }\r\n  }\r\n  //фильтрация текущего массива по мин и макс цене(PriceForm.js)\r\n  setPriceRange = (minPrice, maxPrice) => {\r\n    this.filterPrices = {\r\n      minPrice,\r\n      maxPrice,\r\n    }\r\n    this.showPriceRange()\r\n  }\r\n  showPriceRange = () => {\r\n    this.setShowFiltred(true)\r\n    if (!this.filterPrices.maxPrice) {\r\n      this.filtredFlights = this.currentFlights.filter(\r\n        (flight) =>\r\n          flight.flight.price.total.amount > +this.filterPrices.minPrice\r\n      )\r\n    } else {\r\n      this.filtredFlights = this.currentFlights.filter(\r\n        (flight) =>\r\n          flight.flight.price.total.amount > +this.filterPrices.minPrice &&\r\n          flight.flight.price.total.amount < +this.filterPrices.maxPrice\r\n      )\r\n    }\r\n    if (!this.filterPrices.minPrice && !this.filterPrices.maxPrice) {\r\n      this.setShowFiltred(false)\r\n    }\r\n    this.setCarriers()\r\n  }\r\n  //добавление выбранных опций пересадок в список для фильтрации (FilterForm.js)\r\n  selectTransfers = (name, check) => {\r\n    if (check) {\r\n      this.transferOptions = [...this.transferOptions, name]\r\n    } else {\r\n      this.transferOptions = this.transferOptions.filter(\r\n        (option) => option !== name\r\n      )\r\n    }\r\n    this.filterByValue('transfer')\r\n  }\r\n  //добавление выбранных авиакомпани в список для фильтрации (AviaFilterForm.js)\r\n  selectCompanies = (name, check) => {\r\n    if (check) {\r\n      this.filtredCarriers = [...this.filtredCarriers, name]\r\n    } else {\r\n      this.filtredCarriers = this.filtredCarriers.filter(\r\n        (company) => company !== name\r\n      )\r\n    }\r\n    this.filterByValue('career')\r\n  }\r\n  // получение списка доступных авиакомпаний\r\n  setCarriers = () => {\r\n    this.carriers.length = 0\r\n    this.filtredFlights.map((flight) =>\r\n      this.carriers.push(flight.flight.carrier.caption)\r\n    )\r\n    this.carriers = Array.from(new Set(this.carriers))\r\n  }\r\n}\r\nexport default Store\r\n"],"sourceRoot":""}